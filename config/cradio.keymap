/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// Layer definitions
    #define COLMAK 0
    #define QWERTY 1
    #define ARROWS 2
    #define SYMBOL 3
    #define NUMBER 4
    #define SYSTEM 5
    #define FMWARE 6
// -----------------

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ { 

    combos {
        compatible = "zmk,combos";   

        combo_caps {
            timeout-ms = <50>;
            key-positions = <6 7 8>;
            bindings = <&kp CAPS>;
        };
        

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    F    |    P    |    B    |                |    J    |    L    |    U    |    Y    |   BSP   |
// |    A    |    R    |    S    |    T    |    G    |                |    M    |    N    |    E    |    I    |    O    |
// |    Z    |    X    |    C    |    D    |    V    |                |    K    |    H    |    ,    |    .    |    /    |
//                               | NUM/ESC | ARR/SPC |                | ARR/BSP | SYM/ENT |
		bindings = <
		&kp Q &kp W &kp F &kp P &kp B 						        &kp J &kp L  &kp U    &kp Y   &kp BSPC 
		&mt LALT A &mt RALT R &mt LSHFT S &mt LCTL T &mt LGUI G 	&mt LGUI M &mt LCTL N &mt LSHFT E &mt RALT I &mt LALT O 
		&mt LSFT Z &kp X &kp C &kp D &kp V				            &kp K &kp H  &kp CMMA &kp DOT &kp SLASH
          				&lt NUMBER ENTER &lt ARROWS SPACE  				&lt ARROWS TAB &lt SYMBOL ESC 
		>;
		};

            qwerty_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |                |    Y    |    U    |    I    |    O    |    P    |
// |    A    |    S    |    D    |    F    |    G    |                |    H    |    J    |    K    |    L    |    ;    |
// |    Z    |    X    |    C    |    V    |    B    |                |    N    |    M    |    ,    |    .    |    /    |
//                               | NUM/ESC | ARR/SPC |                | ARR/BSP | SYM/ENT |
		bindings = <
		&kp Q &kp W &kp E &kp R &kp T 						&kp Y &kp U  &kp I    &kp O   &kp P 
		&mt LALT A &mt RALT S &mt LSHFT D &mt LCTL F &mt LGUI G 	&mt LGUI H &mt LCTL J &mt LSHFT K &mt RALT L &mt LALT SEMI
		&kp Z &kp X &kp C &kp V &kp B				        &kp N &kp M  &kp COMMA &kp DOT &kp SLASH
          			&lt NUMBER ENTER &lt ARROWS SPACE  				&lt ARROWS TAB &lt SYMBOL ESC
		>;
		};

       		arrows_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |   ESC   |   DEL   |   BSPC  |  ENTER  | CTRL Y  |                | PG UP   |   HOME  |    ⬆    |   END   |   BSPC  |
// |   TAB   |  LALT   |  LSHFT  |  LCTRL  |  LGUI   |                | PG DN   |    ⬅    |    ⬇    |    →    |         |
// | CTRL Z  | CTRL X  | CTRL C  | CTRL D  | CTRL V  |                |    [    |  CTL ←  |    ⬇    |  CTL →  |    ]    |
//    
		bindings = <
		&kp ESC &kp DEL &kp BSPC &kp ENTER &kp LC(Y)				&kp PG_UP &kp HOME  &kp UP    &kp END   &kp BSPC 
		&kp TAB &kp LALT &kp LSHFT &kp LCTRL &kp LGUI 	            &kp PG_DN  &kp LEFT &kp DOWN &kp RIGHT &kp INS
		&mt LSFT Z &kp X &kp C &kp V &kp B				            &kp LBKT &kp LC(LEFT)  &kp DOWN &kp LC(RIGHT) &kp RBKT
          			&kp ENTER &kp SPACE  							&kp TAB &lt NUMBER ESC
		>;
		};
		
		    symbol_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |                |    Y    |    U    |    I    |    O    |    P    |
// |    A    |    S    |    D    |    F    |    G    |                |    H    |    J    |    K    |    L    |    ;    |
// |    Z    |    X    |    C    |    V    |    B    |                |    N    |    M    |    ,    |    .    |    /    |
//    
		bindings = <
		&kp GRAVE  &kp DQT &kp SQT  &kp HASH  &kp DOLLAR    					&kp AMPS  &kp PERCENT &kp LBRC &kp RBRC &kp RPRN 
		&kp UNDERSCORE  &kp MINUS  &kp PLUS  &kp EQUAL  &kp BACKSLASH 			&kp PIPE &kp COLON  &kp LPAR  &kp RPAR   &kp QMARK
		&kp LBKT  &kp SLASH &kp ASTERISK &kp RBKT   &kp AT_SIGN    				&kp TILDE &kp SEMICOLON &kp LT &kp GT  &kp EXCL
					  &lt SYSTEM ENTER &kp SPACE  										&lt NUMBER TAB   &trans 
		>;
		};	
		
		    number_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |                |    Y    |    7    |    8    |    9    |    P    |
// |    A    |    S    |    D    |    F    |    G    |                |    H    |    4    |    5    |    6    |    ;    |
// |    Z    |    X    |    C    |    V    |    B    |                |    N    |    1    |    2    |    3    |    /    |
//    
		&kp GRAVE  &kp DQT &kp SQT  &kp HASH  &kp DOLLAR    					&kp AMPS  &kp PERCENT &kp LBRC &kp RBRC &kp RPRN 
		&kp UNDERSCORE  &kp MINUS  &kp PLUS  &kp EQUAL  &kp BACKSLASH 			&kp PIPE &kp COLON  &kp LPAR  &kp RPAR   &kp QMARK
		&bt LBKT  &kp SLASH &kp ASTERISK &kp RBKT &kp UNDERSCORE   				&kp MINUS &kp N1  &kp N2  &kp N3 &kp SLASH   
					 &lt FMWARE ENTER &kp SPACE 								&kp SPACE &lt SYSTEM N0 
		>;
		};	
        
       		system_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |                |    Y    |    U    |    I    |    O    |    P    |
// |    A    |    S    |    D    |    F    |    G    |                |    H    |    J    |    K    |    L    |    ;    |
// |    Z    |    X    |    C    |    V    |    B    |                |    N    |    M    |    ,    |    .    |    /    |
//    
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5		&kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
		&kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH 		&kp MINUS &kp EQL  &kp LBKT &kp RBKT  &kp DEL 
		&kp ESC    &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2 	&kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL 
					    &mo 1  &kp LGUI  					&kp RGUI &mo 2 
		>;
		};

       		fmware_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
// |    Q    |    W    |    E    |    R    |    T    |                |    Y    |    U    |    I    |    O    |    P    |
// |    A    |    S    |    D    |    F    |    G    |                |    H    |    J    |    K    |    L    |    ;    |
// |    Z    |    X    |    C    |    V    |    B    |                |    N    |    M    |    ,    |    .    |    /    |
//    
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5		&kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0 
		&kp TAB    &kp LC(S)    &kp DQT      &kp PIPE2     &kp HASH 		&kp MINUS &kp EQL  &kp LBKT &kp RBKT  &kp DEL 
		&kp ESC    &kp TILDE 	&kp NON_US_BSLH &kp NON_US_HASH  &kp TILDE2 	&kp MINUS &kp GRAVE &kp LBKT &kp RBKT  &kp DEL 
					    &mo 1  &kp LGUI  					&kp RGUI &mo 2 
		>;
		};
	};
};
